/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.LabInterface.labTech;

import healthcare.enterprise.Enterprise;
import healthcare.network.Network;
import healthcare.organization.Organization;
import healthcare.userAccount.UserAccount;
import healthcare.workQueue.DoctorLabRequest;
import healthcare.workQueue.WorkRequest;
import javax.swing.JOptionPane;

/**
 *
 * @author adity
 */
public class CollectedMedicalHistory extends javax.swing.JPanel {

    /**
     * Creates new form CollectedMedicalHistory
     */
    
    DoctorLabRequest request;
    UserAccount useraccount;
    Enterprise enterprise;
    String result = "";
    String solution = "";
    String type = "";
    
    public CollectedMedicalHistory(DoctorLabRequest request,UserAccount useraccount, Enterprise enterprise) {
        initComponents();
        this.request = request;
        this.useraccount = useraccount;
        this.enterprise = enterprise;
        populateMedicalHistory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMedicalHistory = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCurrentHealthRiskFound = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMedicalDoseConsumptionDetails = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtLabAssesmentsResults = new javax.swing.JTextArea();
        btnSendResults = new javax.swing.JButton();
        txtGender = new javax.swing.JTextField();

        jLabel6.setText("jLabel6");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Patient's Medical History and Symptoms");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("General Information");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Gender");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Age");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Medical History");

        txtMedicalHistory.setColumns(20);
        txtMedicalHistory.setRows(5);
        jScrollPane1.setViewportView(txtMedicalHistory);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Current Health Risk Found");

        txtCurrentHealthRiskFound.setColumns(20);
        txtCurrentHealthRiskFound.setRows(5);
        jScrollPane2.setViewportView(txtCurrentHealthRiskFound);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Medical Dose Consumption Details");

        txtMedicalDoseConsumptionDetails.setColumns(20);
        txtMedicalDoseConsumptionDetails.setRows(5);
        jScrollPane3.setViewportView(txtMedicalDoseConsumptionDetails);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Lab Assesment Results");

        txtLabAssesmentsResults.setColumns(20);
        txtLabAssesmentsResults.setRows(5);
        jScrollPane4.setViewportView(txtLabAssesmentsResults);

        btnSendResults.setText("Process And Send Results");
        btnSendResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendResultsActionPerformed(evt);
            }
        });

        txtGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtAge)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(btnSendResults, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnSendResults)
                .addContainerGap(121, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnSendResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendResultsActionPerformed
        // TODO add your handling code here:
        if (request.isDrug_history() || request.isAlcohol_history()
                || request.isHr_risk() || request.isTemp_risk()
                || (request.isOxycodone_taken() && request.isOxycodone_risk())
                || (request.isFantanyl_taken() && request.isFantanyl_risk())
                || (request.isBupre_taken() && request.isBupre_risk())
                || (request.isMethadone_taken() && request.isMethadone_risk())
                || (request.isOxymorphone_taken() && request.isOxymorphone_risk())
                || (request.isInjection_checked()) || (request.isIntoxication_checked())
                || request.isWithdrawal_checked() || request.isDisease_checked()) {
            type = "Overdose [Pharmacotherapist]";
            result = result + "This is an Opioid Overdose case.";
            solution = "Patient is recommended for Pharmacotherapist.";
            request.setStatus("Lab req done");

        } // Send to Psychiatrist when the below criteria is true 
        else if (request.isDepression_history() || request.isAnxiety_history()
                || request.isDisrupt_history() || request.isBp_risk() || request.isResp_risk()) {
            type = "Overdose [Psychiatrist]";
            result = result + "This is an Opioid Overdose case.";
            solution = "Patient is recommended for Psychiatrist.";
            request.setStatus("Lab req done");

        } // If not any above criteria then patient can be treated medically 
        else {
            type = "Not Overdose [Medical Treatment]";
            result = result + "This is not an Opioid Overdose case." + "\n"
                    + "Patient is recommended for medical treatment .";
            solution = "Patient is recommended for medical treatm.";
            request.setStatus("Lab req done");

        }

        txtLabAssesmentsResults.setText(result);
        /*-----------------------*/
        int b = request.getHashcode();
        System.out.println("b" + b);
        //Dharati
        Enterprise inEnterprise = null;
        Organization inOrganization = null;
        Network inNetwork = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization.getOrganizationName().equals("Doctor Organization")) {
                for (WorkRequest work : organization.getWorkQueue().getWorkRequestList()) {
                    if (work.getHashcode() == b) {
                        work.setStatus("Lab req done");
                        work.setLabresult(result);
                        work.setResulttype(type);
                        work.setSolution(solution);
                    }

                }
            }
        }

        JOptionPane.showMessageDialog(null, "Result Sent Successfully");
        
    }//GEN-LAST:event_btnSendResultsActionPerformed

    private void txtGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenderActionPerformed

    
    public void populateMedicalHistory() {

        txtName.setText(request.getName());
        txtGender.setText(request.getGender());
        txtAge.setText(Integer.toString(request.getAge()));
        String med_hist = "";
        String health_risk = "";
        String consum_risk = "";
        if (request.isDrug_history()) {
            med_hist = "Drug History Found" + "\n";

        }

        if (request.isAlcohol_history()) {
            med_hist = med_hist + "Alcohol History Found" + "\n";

        }

        if (request.isDepression_history()) {
            med_hist = med_hist + "Depression History Found" + "\n";
        }

        if (request.isAnxiety_history()) {
            med_hist = med_hist + "Anxiety History Found" + "\n";
        }
        if (request.isDisrupt_history()) {
            med_hist = med_hist + "Bad Social Relationships History Found" + "\n";
        }
        if (med_hist.length() > 0) {
            result = result + med_hist;
            txtMedicalHistory.setText(med_hist);
        } else {
            txtMedicalHistory.setText("No Severe Medical History Found");
        }

        if (request.isHr_risk()) {
            health_risk = "Heart Risk Found" + "\n";
        }

        if (request.isBp_risk()) {
            health_risk = "High Blood Pressure Diagnosed" + "\n";
        }

        if (request.isTemp_risk()) {
            health_risk = health_risk + "Fever Diagnosed" + "\n";
        }

        if (request.isResp_risk()) {
            health_risk = health_risk + "High Respiratory Rate Diagnosed" + "\n";
        }
        if (health_risk.length() > 0) {
            txtCurrentHealthRiskFound.setText(health_risk);
        } else {
            txtCurrentHealthRiskFound.setText("No Sever Health Risk Detected");
        }

        // Calculating consumption risk 
        if (request.isOxycodone_taken() && request.isOxycodone_risk()) {
            consum_risk = "Above Limit Oxycodone Conspumtion History" + "\n";
        }

        if (request.isFantanyl_taken() && request.isFantanyl_risk()) {
            consum_risk = consum_risk + "Above Limit Fantanyl Conspumtion History" + "\n";
        }

        if (request.isBupre_taken() && request.isBupre_risk()) {
            consum_risk = consum_risk + "Above Limit Buprenorphine Conspumtion History" + "\n";
        }

        if (request.isMethadone_taken() && request.isMethadone_risk()) {
            consum_risk = consum_risk + "Above Limit Methadon Conspumtion History" + "\n";
        }

        if (request.isOxymorphone_taken() && request.isOxymorphone_risk()) {
            consum_risk = consum_risk + "Above Limit Oxymorphone Conspumtion History" + "\n";
        }
        if (consum_risk.length() > 0) {
            txtMedicalDoseConsumptionDetails.setText(consum_risk);
        } else {
            txtMedicalDoseConsumptionDetails.setText("No severe medicine consumption history found");
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSendResults;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextArea txtCurrentHealthRiskFound;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextArea txtLabAssesmentsResults;
    private javax.swing.JTextArea txtMedicalDoseConsumptionDetails;
    private javax.swing.JTextArea txtMedicalHistory;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
