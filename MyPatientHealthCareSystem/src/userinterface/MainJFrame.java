/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package userinterface;

import healthcare.Ecosystem;
import healthcare.db4oUtil.Db4oUtil;
import healthcare.enterprise.Enterprise;
import healthcare.enterprise.EnterpriseMasterDirectory;
import healthcare.enterprise.vaccination.VaccinationAdminRole;
import healthcare.network.Network;
import healthcare.organization.Organization;
import healthcare.role.Role;
import healthcare.userAccount.UserAccount;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import userinterface.Administration.AdministratorWorkArea;
import userinterface.DonorBankInterface.donationHandler.DonationHandlerWorkArea;
import userinterface.DonorBankInterface.donor.DonorWorkArea;
import userinterface.DonorBankInterface.donorAdmin.DonorAdminWorkArea;
//import userinterface.DonorBankInterface.Logindetails.AdminLogin.DonorAdminWorkArea;
import userinterface.EmergencyUnit.emergencyAdmin.EmergencyUnitAdminWorkArea;
import userinterface.EmergencyUnit.handler.EmergencyHandlerWorkArea;
import userinterface.Pharmacy.pharmacist.PharmacistWorkArea;
import userinterface.Pharmacy.pharmacyAdmin.PharmacyAdminWorkArea;
import userinterface.HealthcareInterface.doctor.DoctorWorkArea;
import userinterface.HealthcareInterface.healthcareAdmin.HealthCareAdminWorkArea;
import userinterface.HealthcareInterface.healthcareAdmin.doctor.HealthCareAdminDoctorPanel;
import userinterface.HealthcareInterface.nurse.NurseWorkArea;
import userinterface.HealthcareInterface.patient.PatientWorkArea;
import userinterface.LabInterface.labAdmin.LabAdminWorkArea;
import userinterface.LabInterface.labTech.LabTechnicianWorkArea;
import userinterface.SupplyChainInterface.handler.HandlerWorkArea;
import userinterface.SupplyChainInterface.supplyManger.SupplyManagerWorkArea;
import userinterface.Vaccination.vaccinationAdmin.VaccinationAdminWorkArea;
import userinterface.Vaccination.vaccinator.VaccinatorWorkArea;

/**
 *
 * @author Tejas
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    
    private Ecosystem ecosystem;
    private Db4oUtil db4oUtil = Db4oUtil.getDb4oInstance();
    
    public MainJFrame() {
        initComponents();
        ecosystem = db4oUtil.retrieveDb4oSystem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome To Patient Health Care System");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 1440, 85));

        lblUsername.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        lblUsername.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblUsername.setText("Username  :");
        getContentPane().add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 410, 162, 37));

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });
        getContentPane().add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 410, 222, 37));

        lblPassword.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        lblPassword.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblPassword.setText("Password  :");
        getContentPane().add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 480, 162, 37));

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 480, 222, 37));

        btnLogin.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        getContentPane().add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 540, -1, 38));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/MainSignUp1.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/MainSignUp2.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 569, -1, 330));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/White Screen.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 304, -1, 290));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:

        // Get user name
        String userName = txtUsername.getText();
        // Get Password
        char[] passwordCharArray = txtPassword.getPassword();
        String password = String.valueOf(passwordCharArray);

        //Step1: Check in the system admin user account directory if you have the user
        UserAccount userAccount = ecosystem.getUserAccountDirectory().authenticateUser(userName, password);

        Enterprise inEnterprise = null;
        Organization inOrganization = null;
        Network inNetwork = null;

        if (userAccount == null) {
            for (Network network : ecosystem.getNetworkList()) {
                inNetwork = network;
                for (Enterprise enterprise : network.getEnterpriseMasterList().getEnterpriseList()) {
                    userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                    if (userAccount == null) {
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                            userAccount = organization.getUserAccountDirectory().authenticateUser(userName, password);
                            if (userAccount != null) {
                                inEnterprise = enterprise;
                                inOrganization = organization;
                                break;
                            }
                        }
                    } else {
                        inEnterprise = enterprise;
                        break;
                    }
                    if (inOrganization != null) {
                        break;
                    }
                }
                if (inEnterprise != null) {
                    break;
                }
            }
        }

        if (userAccount == null) {
            JOptionPane.showMessageDialog(null, "Invalid credentials");
            return;
        } else {
            Role role = userAccount.getRole();
            System.out.println(Role.RoleType.Administrator.toString());
            System.out.println(userAccount.getRole().toString());
            JFrame frame = role.createWorkArea(userAccount, inOrganization, inEnterprise, ecosystem, inNetwork);

// ======================== HealthCare================================================================          
            if (Role.RoleType.HealthCareAdmin.toString().equals(userAccount.getRole().toString())) {
                HealthCareAdminWorkArea healthcareFrame = (HealthCareAdminWorkArea) frame;
                healthcareFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                healthcareFrame.setVisible(true);
            }

            if (Role.RoleType.Doctor.toString().equals(userAccount.getRole().toString())) {
                DoctorWorkArea docFrame = (DoctorWorkArea) frame;
                docFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                docFrame.setVisible(true);
            }

            if (Role.RoleType.Nurse.toString().equals(userAccount.getRole().toString())) {
                NurseWorkArea nurseFrame = (NurseWorkArea) frame;
                nurseFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                nurseFrame.setVisible(true);
            }

            if (Role.RoleType.Patient.toString().equals(userAccount.getRole().toString())) {
                PatientWorkArea patientFrame = (PatientWorkArea) frame;
                patientFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                patientFrame.setVisible(true);
            }

// ===============================================================================================
// ============================DonorBank==========================================================
            if (Role.RoleType.DonorAdmin.toString().equals(userAccount.getRole().toString())) {
                DonorAdminWorkArea donorAdmin = (DonorAdminWorkArea) frame;
                donorAdmin.setExtendedState(JFrame.MAXIMIZED_BOTH);
                donorAdmin.setVisible(true);
            }

            if (Role.RoleType.Donor.toString().equals(userAccount.getRole().toString())) {
                DonorWorkArea donor = (DonorWorkArea) frame;
                donor.setExtendedState(JFrame.MAXIMIZED_BOTH);
                donor.setVisible(true);
            }
            System.out.println("------------------------------+++++-------------");
            System.out.println(userAccount.getRole().toString());
            
            if (Role.RoleType.DonationHandler.toString().equals(userAccount.getRole().toString())) {
                DonationHandlerWorkArea donationHandlerFrame = (DonationHandlerWorkArea) frame;
                donationHandlerFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                donationHandlerFrame.setVisible(true);
            }

// ===============================================================================================
// ============================Emergency unit======================================================
            if (Role.RoleType.EmergencyUnitAdmin.toString().equals(userAccount.getRole().toString())) {
                EmergencyUnitAdminWorkArea emergencyAdminFrame =  (EmergencyUnitAdminWorkArea) frame;
                emergencyAdminFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                emergencyAdminFrame.setVisible(true);
            }

            if (Role.RoleType.AmbulanceHandler.toString().equals(userAccount.getRole().toString())) {
                EmergencyHandlerWorkArea ambHanlerFrame = (EmergencyHandlerWorkArea) frame;
                ambHanlerFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                ambHanlerFrame.setVisible(true);
            }

// ===============================================================================================
// ============================lab unit=======================================================  
            if (Role.RoleType.LabAdmin.toString().equals(userAccount.getRole().toString())) {
                LabAdminWorkArea labAdminFrame = (LabAdminWorkArea) frame;
                labAdminFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                labAdminFrame.setVisible(true);
            }

            if (Role.RoleType.LabAssistant.toString().equals(userAccount.getRole().toString())) {
                LabTechnicianWorkArea labTechFrame = (LabTechnicianWorkArea) frame;
                labTechFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                labTechFrame.setVisible(true);
            }

// ===============================================================================================
// ============================Pharmacy===========================================================  
            if (Role.RoleType.PharmacyAdmin.toString().equals(userAccount.getRole().toString())) {
                PharmacyAdminWorkArea pharAdminFrame = (PharmacyAdminWorkArea) frame;
                pharAdminFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                pharAdminFrame.setVisible(true);
            }

            if (Role.RoleType.Pharmacist.toString().equals(userAccount.getRole().toString())) {
                PharmacistWorkArea pharFrame = (PharmacistWorkArea) frame;
                pharFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                pharFrame.setVisible(true);
            }

// ===============================================================================================
// ============================SupplyChain===========================================================  
            if (Role.RoleType.Handler.toString().equals(userAccount.getRole().toString())) {
                HandlerWorkArea hanFrame = (HandlerWorkArea) frame;
                hanFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                hanFrame.setVisible(true);
            }

            if (Role.RoleType.SupplyManager.toString().equals(userAccount.getRole().toString())) {
                SupplyManagerWorkArea supplierFrame = (SupplyManagerWorkArea) frame;
                supplierFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                supplierFrame.setVisible(true);

            }
            
// ===============================================================================================
// ============================Vaccination===========================================================  
            if (Role.RoleType.Vaccinator.toString().equals(userAccount.getRole().toString())) {
                VaccinatorWorkArea vaccFrame = (VaccinatorWorkArea) frame;
                vaccFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                vaccFrame.setVisible(true);
            }

            if (Role.RoleType.VaccinationAdmin.toString().equals(userAccount.getRole().toString())) {
                VaccinationAdminWorkArea vaccAdminFrame = (VaccinationAdminWorkArea) frame;
                vaccAdminFrame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                vaccAdminFrame.setVisible(true);

            }
            
// ===============================================================================================
// ============================AdminMaster===========================================================  
            if (Role.RoleType.Administrator.toString().equals(userAccount.getRole().toString())) {
                AdministratorWorkArea adminWA = (AdministratorWorkArea) frame;
                adminWA.setExtendedState(JFrame.MAXIMIZED_BOTH);
                adminWA.setVisible(true);
            }

        }

    }//GEN-LAST:event_btnLoginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainJFrame frame = new MainJFrame();
                frame.setExtendedState(JFrame.MAXIMIZED_BOTH); 
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
